import java.util.Arrays;

public class ListTest {
    public static void main(String[] args) {
        int[] a =new int[20];
        for(int i=0;i<=19;i++)
            a[i]=(int)(100*Math.random());
        System.out.println(Arrays.toString(a));
        quickSort(a);
        System.out.println(Arrays.toString(a));
    }

    public static void quickSort(int[] a) {
        if(a.length>0) {
            quickSort(a, 0 , a.length-1);
        }
    }

    private static void quickSort(int[] a, int low, int high) {
        if( low > high) {
            return;
        }
        int i = low;
        int j = high;
        //关键位默认第一个
        int key = a[ low ];
        //4，完成一趟排序
        while( i< j) {
            /，从右往左找到第一个小于key的数
            while(i<j && a[j] > key){
                j--;
            }
            //从左往右找到第一个大于key的数
            while( i<j && a[i] <= key) {
                i++;
            }
            // 交换
            if(i<j) {
                int p = a[i];
                a[i] = a[j];
                a[j] = p;
            }
        }
        // 调整key的位置
        int p = a[i];
        a[i] = a[low];
        a[low] = p;
        //对key左边的数快排
        quickSort(a, low, i-1 );
        // 对key右边的数快排
        quickSort(a, i+1, high);
    }
}
